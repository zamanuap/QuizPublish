{"version":3,"sources":["components/Data/QuizQuestion.js","components/Data/AnswerData.js","components/Data/BuildingData.js","components/Data/CityData.js","components/Context/ContextProvider.js","components/ModalInfos/CityModalInfo.js","components/FactCategory/CityItem.js","components/Carousel/CityCarousel.js","components/Carousel/BuildingCarousel.js","components/Home.js","components/FetchData.js","components/Counter.js","components/Result/Legend.js","components/Result/ResultProgressBar.js","components/Result/ResultAnswer.js","components/Result/ResultQuesArea.js","components/Result/ResultPage.js","components/NewNavMenu.js","components/Quiz/ProgressBar.js","components/Quiz/Legend.js","components/Quiz/Answer.js","components/Quiz/QuesArea.js","components/Quiz/QuizPage.js","components/Home/CityHome.js","components/ModalInfos/BuildingModalInfo.js","components/FactCategory/BuildingItem.js","components/Home/BuildingHome.js","App.js","registerServiceWorker.js","index.js"],"names":["quizQuestions","type","text","possibilities","answer","selected","correct","answerData","buildingData","id","image_url","locations","built","description","cityData","size","population","AppContext","createContext","ContextProvider","props","_useState","useState","getBuildingData","_useState2","Object","slicedToArray","_useState3","getCityData","_useState4","_useState5","_useState6","data","_useState7","_useState8","quizs","setQuizs","_useState9","_useState10","ansData","_useState11","_useState12","activeQues","setActiveQues","_useState13","_useState14","completed","setCompleted","_useState15","_useState16","startQuiz","setStartQuiz","useEffect","_useState17","_useState18","isOpen","setIsOpen","_useState19","_useState20","item","setItem","react_default","a","createElement","Provider","value","toggle","showModal","showActiveQues","number","length","selectAns","index","newList","map","indexOf","objectSpread","filter","resetCompleted","resetActiveQues","updateCorrectAnswer","startQuizClicked","flag","console","log","children","CityModalInfo","_useContext","useContext","Modal","show","onHide","Header","Title","Body","style","marginBottom","className","src","Footer","onClick","CityItem","_ref","Fragment","ModalInfos_CityModalInfo","items","altText","caption","header","key","Home","reactstrap_es","cityItems","buildingItems","FetchData","_Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","forecasts","loading","inherits","createClass","populateWeatherData","contents","renderForecastsTable","_populateWeatherData","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","setState","stop","apply","arguments","aria-labelledby","forecast","date","temperatureC","temperatureF","summary","Component","displayName","name","Legend","ResultProgressBar","x","ResultAnswer","ques","indexQues","indexAns","ResultQuesArea","concat","ans","Result_ResultAnswer","Link","to","textDecoration","ResultPage","calScore","i","Result_ResultProgressBar","Result_Legend","Result_ResultQuesArea","NewNavMenu","selectFact","toggleButton","document","getElementsByClassName","topList","addEventListener","classList","href","ProgressBar","Answer","QuesArea","color","Quiz_Answer","QuizPage","Quiz_ProgressBar","Quiz_Legend","Quiz_QuesArea","CityHome","FactCategory_CityItem","BuildingModalInfo","BuildingItem","ModalInfos_BuildingModalInfo","BuildingHome","FactCategory_BuildingItem","App","Context_ContextProvider","src_components_NewNavMenu","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","BrowserRouter","basename","App_App","URL","process","origin","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"+YA0MeA,EA1MO,CAClB,CACIC,KAAM,OACNC,KAAM,mCACNC,cAAe,CACX,CACIC,OAAQ,cAEZ,CACIA,OAAQ,eAEZ,CACIA,OAAQ,eAEZ,CACIA,OAAQ,gBAGhBC,SAAU,KACVC,QAAS,MAEb,CACIL,KAAM,OACNC,KAAM,sDACNC,cAAe,CACX,CACIC,OAAQ,aAEZ,CACIA,OAAQ,YAEZ,CACIA,OAAQ,YAEZ,CACIA,OAAQ,aAGhBC,SAAU,KACVC,QAAS,MAEb,CACIL,KAAM,QACNC,KAAM,mDACNC,cAAe,CACX,CACIC,OAAQ,kHAEZ,CACIA,OAAQ,wGAEZ,CACIA,OAAQ,iHAEZ,CACIA,OAAQ,qMAGhBC,SAAU,KACVC,QAAS,MAEb,CACIL,KAAM,QACNC,KAAM,sCACNC,cAAe,CACX,CACIC,OAAQ,8GAEZ,CACIA,OAAQ,2HAEZ,CACIA,OAAQ,oMAEZ,CACIA,OAAQ,6HAGhBC,SAAU,KACVC,QAAS,MAEb,CACIL,KAAM,OACNC,KAAM,iDACNC,cAAe,CACX,CACIC,OAAQ,wCAEZ,CACIA,OAAQ,qBAEZ,CACIA,OAAQ,0BAEZ,CACIA,OAAQ,0BAGhBC,SAAU,KACVC,QAAS,MAEb,CACIL,KAAM,OACNC,KAAM,+CACNC,cAAe,CACX,CACIC,OAAQ,qBAEZ,CACIA,OAAQ,sBAEZ,CACIA,OAAQ,oBAEZ,CACIA,OAAQ,8BAGhBC,SAAU,KACVC,QAAS,MAEb,CACIL,KAAM,OACNC,KAAM,2CACNC,cAAe,CACX,CACIC,OAAQ,+BAEZ,CACIA,OAAQ,2BAEZ,CACIA,OAAQ,6BAEZ,CACIA,OAAQ,gBAGhBC,SAAU,KACVC,QAAS,MAEb,CACIL,KAAM,QACNC,KAAM,6CACNC,cAAe,CACX,CACIC,OAAQ,oHAEZ,CACIA,OAAQ,4HAEZ,CACIA,OAAQ,wGAEZ,CACIA,OAAQ,4HAGhBC,SAAU,KACVC,QAAS,MAEb,CACIL,KAAM,OACNC,KAAM,yCACNC,cAAe,CACX,CACIC,OAAQ,SAEZ,CACIA,OAAQ,QAEZ,CACIA,OAAQ,SAEZ,CACIA,OAAQ,UAGhBC,SAAU,KACVC,QAAS,MAEb,CACIL,KAAM,OACNC,KAAM,yCACNC,cAAe,CACX,CACIC,OAAQ,qBAEZ,CACIA,OAAQ,oBAEZ,CACIA,OAAQ,sBAEZ,CACIA,OAAQ,iBAGhBC,SAAU,KACVC,QAAS,OCtMFC,EADI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GCkFhCC,EAlFM,CACjB,CACIC,GAAI,EACJR,KAAM,eACNS,UAAW,gCACXC,UAAW,aACXC,MAAO,WACPC,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,aACNS,UAAW,+BACXC,UAAW,aACXC,MAAO,WACPC,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,UACNS,UAAW,6BACXC,UAAW,kBACXC,MAAO,WACPC,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,oCACNS,UAAW,2BACXC,UAAW,QACXC,MAAO,WACPC,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,cACNS,UAAW,gCACXC,UAAW,sBACXC,MAAO,WACPC,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,gBACNS,UAAW,iCACXC,UAAW,gBACXC,MAAO,WACPC,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,eACNS,UAAW,iCACXC,UAAW,gBACXC,MAAO,WACPC,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,iBACNS,UAAW,6BACXC,UAAW,iBACXC,MAAO,WACPC,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,aACNS,UAAW,+BACXC,UAAW,YACXC,MAAO,WACPC,YAAa,oBAEjB,CACIJ,GAAI,GACJR,KAAM,kBACNS,UAAW,oCACXC,UAAW,yBACXC,MAAO,WACPC,YAAa,qBCaNC,EA5FE,CACb,CACIL,GAAI,EACJR,KAAM,WACNS,UAAW,yBACXC,UAAW,gBACXI,KAAM,WACNC,WAAY,cACZH,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,UACNS,UAAW,yBACXC,UAAW,gBACXI,KAAM,WACNC,WAAY,cACZH,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,QACNS,UAAW,uBACXC,UAAW,cACXI,KAAM,WACNC,WAAY,cACZH,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,iBACNS,UAAW,2BACXC,UAAW,OACXI,KAAM,WACNC,WAAY,cACZH,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,QACNS,UAAW,uBACXC,UAAW,OACXI,KAAM,WACNC,WAAY,cACZH,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,SACNS,UAAW,wBACXC,UAAW,YACXI,KAAM,WACNC,WAAY,cACZH,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,SACNS,UAAW,wBACXC,UAAW,SACXI,KAAM,WACNC,WAAY,cACZH,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,QACNS,UAAW,uBACXC,UAAW,SACXI,KAAM,WACNC,WAAY,cACZH,YAAa,oBAEjB,CACIJ,GAAI,EACJR,KAAM,gBACNS,UAAW,8BACXC,UAAW,gBACXI,KAAM,WACNC,WAAY,cACZH,YAAa,oBAEjB,CACIJ,GAAI,GACJR,KAAM,eACNS,UAAW,6BACXC,UAAW,OACXI,KAAM,WACNC,WAAY,cACZH,YAAa,qBCnFRI,EAAaC,0BAkGXC,EAhGS,SAACC,GAAU,IAAAC,EAEKC,mBAASC,GAFdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAExBb,EAFwBgB,EAAA,GAAAG,GAAAH,EAAA,GAGHF,mBAASM,IAHNC,EAAAJ,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAGxBb,EAHwBe,EAAA,GAAAC,GAAAD,EAAA,GAIPP,mBAASM,IAJFG,EAAAN,OAAAC,EAAA,EAAAD,CAAAK,EAAA,GAIxBE,EAJwBD,EAAA,GAAAE,GAAAF,EAAA,GAKLT,mBAAStB,IALJkC,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAKxBE,EALwBD,EAAA,GAKjBE,EALiBF,EAAA,GAAAG,EAMDf,mBAASf,GANR+B,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAMxBE,EANwBD,EAAA,GAAAE,GAAAF,EAAA,GAOKhB,mBAAS,IAPdmB,EAAAhB,OAAAC,EAAA,EAAAD,CAAAe,EAAA,GAOxBE,EAPwBD,EAAA,GAOZE,EAPYF,EAAA,GAAAG,EAQGtB,oBAAS,GARZuB,EAAApB,OAAAC,EAAA,EAAAD,CAAAmB,EAAA,GAQxBE,EARwBD,EAAA,GAQbE,EARaF,EAAA,GAAAG,EASG1B,oBAAS,GATZ2B,EAAAxB,OAAAC,EAAA,EAAAD,CAAAuB,EAAA,GASxBE,EATwBD,EAAA,GASbE,EATaF,EAAA,GAW/BG,oBAAU,aAGP,IAd4B,IAAAC,EAeH/B,oBAAS,GAfNgC,EAAA7B,OAAAC,EAAA,EAAAD,CAAA4B,EAAA,GAexBE,EAfwBD,EAAA,GAehBE,EAfgBF,EAAA,GAAAG,EAyBPnC,mBAAS,IAzBFoC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAgC,EAAA,GAyBxBE,EAzBwBD,EAAA,GAyBlBE,EAzBkBF,EAAA,GAqF/B,OACIG,EAAAC,EAAAC,cAAC9C,EAAW+C,SAAZ,CAAqBC,MAAO,CACxBjC,OAAMuB,SAAQW,OA/DP,kBAAMV,GAAWD,IA+DFI,OAAMQ,UA7DlB,SAACR,GACfC,EAAQD,GACRH,GAAU,IA2DiCrB,QAAOO,aAC9C0B,eAxEe,SAACC,GAChBA,EAASlC,EAAMmC,OAAS,EACxBD,EAASlC,EAAMmC,OAAS,EAGxB3B,EAAc0B,IAmEEE,UA1DN,SAACC,GACf,IAAMC,EAAUtC,EAAMuC,IAAI,SAACf,GACvB,OAAIxB,EAAMwC,QAAQhB,KAAUjB,EACPjB,OAAAmD,EAAA,EAAAnD,CAAA,GACVkC,EADU,CAEbtD,SAAUmE,IAKXb,IAEXvB,EAASqC,GAGgB,GADRA,EAAQI,OAAO,SAAAlB,GAAI,OAAqB,MAAjBA,EAAKtD,WAC9BiE,QACXvB,GAAa,IA0CcD,YAAWgC,eAjBvB,WACnB/B,GAAa,IAgB6CR,UACtDwC,gBAdgB,YAzBI,WACxB,IAAMN,EAAUtC,EAAMuC,IAAI,SAACf,GACvB,OAAIA,EAAKtD,WAAakC,EAAQJ,EAAMwC,QAAQhB,IACvBlC,OAAAmD,EAAA,EAAAnD,CAAA,GACVkC,EADU,CAEbrD,SAAS,IAKImB,OAAAmD,EAAA,EAAAnD,CAAA,GACVkC,EADU,CAEbrD,SAAS,MAMrB8B,EAASqC,GAQTO,GACArC,EAAc,IAYOsC,iBATA,SAACC,GACtBC,QAAQC,IAAI,gBAAiBF,GAC7B/B,EAAa+B,IAO0BhC,YAAWpC,WAAUN,iBAEvDY,EAAMiE,0BC5DJC,SAjCO,WAAM,IAAAC,EAESC,qBAAWvE,GAApCsC,EAFgBgC,EAEhBhC,OAAQW,EAFQqB,EAERrB,OAAQP,EAFA4B,EAEA5B,KAExB,OACIE,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAOC,KAAMnC,EAAQoC,OAAQzB,GACzBL,EAAAC,EAAAC,cAAC0B,EAAA,EAAMG,OAAP,KACI/B,EAAAC,EAAAC,cAAC0B,EAAA,EAAMI,MAAP,KAAclC,EAAK1D,OAEvB4D,EAAAC,EAAAC,cAAC0B,EAAA,EAAMK,KAAP,KACIjC,EAAAC,EAAAC,cAAA,OAAKgC,MAAO,CAAEC,aAAc,IAAMC,UAAU,OACxCpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,oBACXpC,EAAAC,EAAAC,cAAA,OAAKmC,IAAKvC,EAAKjD,UAAWuF,UAAU,mCAG5CpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACXpC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,4BAA4BJ,EAAKhD,WACpCkD,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,wBAAwBJ,EAAK5C,MAChC8C,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,8BAA8BJ,EAAK3C,aAE1C6C,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACXpC,EAAAC,EAAAC,cAAA,SAAIJ,EAAK9C,gBAIrBgD,EAAAC,EAAAC,cAAC0B,EAAA,EAAMU,OAAP,KACItC,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,iBAAiBG,QAASlC,GAA5C,aCFDmC,EA1BE,SAAAC,GAAc,IAAX3C,EAAW2C,EAAX3C,KACRQ,EAAcqB,qBAAWvE,GAAzBkD,UAER,OACIN,EAAAC,EAAAC,cAACF,EAAAC,EAAMyC,SAAP,KACI1C,EAAAC,EAAAC,cAAA,OAAKgC,MAAO,CAAEC,aAAc,IAAMC,UAAU,YACxCpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,2BACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACXpC,EAAAC,EAAAC,cAAA,OAAKmC,IAAKvC,EAAKjD,UAAWuF,UAAU,kCAExCpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACXpC,EAAAC,EAAAC,cAAA,UAAKJ,EAAK1D,MACV4D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,4BAA4BJ,EAAKhD,WACpCkD,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,wBAAwBJ,EAAK5C,MAChC8C,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,8BAA8BJ,EAAK3C,YACtC6C,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,8BAA8BG,QAAS,kBAAMjC,EAAUR,KAAzE,kBAKhBE,EAAAC,EAAAC,cAACyC,EAAD,QCFGC,EAxBD,CACV,CACIP,IAAK,uBACLQ,QAAS,UACTC,QAAS,GACTC,OAAQ,QACRC,IAAK,KAET,CACIX,IAAK,6BACLQ,QAAS,UACTC,QAAS,GACTC,OAAQ,eACRC,IAAK,KAET,CACIX,IAAK,yBACLQ,QAAS,UACTC,QAAS,GACTC,OAAQ,WACRC,IAAK,MCIEJ,EAxBD,CACV,CACIP,IAAK,iCACLQ,QAAS,UACTC,QAAS,GACTC,OAAQ,eACRC,IAAK,KAET,CACIX,IAAK,gCACLQ,QAAS,UACTC,QAAS,GACTC,OAAQ,cACRC,IAAK,KAET,CACIX,IAAK,6BACLQ,QAAS,UACTC,QAAS,GACTC,OAAQ,UACRC,IAAK,MCWEC,SAvBF,WAAM,IAAAvB,EAEoBC,qBAAWvE,GAF/BsE,EAEPvD,KAIR,OAFAiD,EAJeM,EAEDN,mBAEG,GAGbpB,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OAEXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,iBACXpC,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAsBN,MAAOO,KAEjCnD,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,iBACXpC,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAsBN,MAAOQ,kCCtBpCC,EAAb,SAAAC,GAGE,SAAAD,EAAY9F,GAAO,IAAAgG,EAAA,OAAA3F,OAAA4F,EAAA,EAAA5F,CAAA6F,KAAAJ,IACjBE,EAAA3F,OAAA8F,EAAA,EAAA9F,CAAA6F,KAAA7F,OAAA+F,EAAA,EAAA/F,CAAAyF,GAAAO,KAAAH,KAAMlG,KACDsG,MAAQ,CAAEC,UAAW,GAAIC,SAAS,GAFtBR,EAHrB,OAAA3F,OAAAoG,EAAA,EAAApG,CAAAyF,EAAAC,GAAA1F,OAAAqG,EAAA,EAAArG,CAAAyF,EAAA,EAAAL,IAAA,oBAAA5C,MAAA,WASIqD,KAAKS,wBATT,CAAAlB,IAAA,SAAA5C,MAAA,WAsCI,IAAI+D,EAAWV,KAAKI,MAAME,QACtB/D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBACHmD,EAAUe,qBAAqBX,KAAKI,MAAMC,WAE9C,OACE9D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAItD,GAAG,cAAP,oBACAoD,EAAAC,EAAAC,cAAA,uEACCiE,KA9CT,CAAAnB,IAAA,sBAAA5C,MAAA,eAAAiE,EAAAzG,OAAA0G,EAAA,EAAA1G,CAAA2G,EAAAtE,EAAAuE,KAAA,SAAAC,IAAA,IAAAC,EAAAvG,EAAA,OAAAoG,EAAAtE,EAAA0E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAoD2BC,MAAM,mBApDjC,cAoDUL,EApDVE,EAAAI,KAAAJ,EAAAE,KAAA,EAqDuBJ,EAASO,OArDhC,OAqDU9G,EArDVyG,EAAAI,KAsDIvB,KAAKyB,SAAS,CAAEpB,UAAW3F,EAAM4F,SAAS,IAtD9C,wBAAAa,EAAAO,SAAAV,EAAAhB,SAAA,yBAAAY,EAAAe,MAAA3B,KAAA4B,YAAA,OAAArC,IAAA,uBAAA5C,MAAA,SAY8B0D,GAC1B,OACE9D,EAAAC,EAAAC,cAAA,SAAOkC,UAAU,sBAAsBkD,kBAAgB,cACrDtF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uBAGJF,EAAAC,EAAAC,cAAA,aACG4D,EAAUjD,IAAI,SAAA0E,GAAQ,OACrBvF,EAAAC,EAAAC,cAAA,MAAI8C,IAAKuC,EAASC,MAChBxF,EAAAC,EAAAC,cAAA,UAAKqF,EAASC,MACdxF,EAAAC,EAAAC,cAAA,UAAKqF,EAASE,cACdzF,EAAAC,EAAAC,cAAA,UAAKqF,EAASG,cACd1F,EAAAC,EAAAC,cAAA,UAAKqF,EAASI,kBA7B5BtC,EAAA,CAA+BuC,aAAlBvC,EACJwC,YAAcxC,EAAUyC,WCAjC,ICqBeC,EArBA,WACX,OACI/F,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACXpC,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,SACXpC,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,gBACdpC,EAAAC,EAAAC,cAAA,KAAGkC,UAAU,iBAEjBpC,EAAAC,EAAAC,cAAA,qBAEJF,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,SACXpC,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,kBACdpC,EAAAC,EAAAC,cAAA,KAAGkC,UAAU,iBAEjBpC,EAAAC,EAAAC,cAAA,0BCCL8F,EAfW,WAAM,IAAAtE,EACMC,qBAAWvE,GAArCkB,EADoBoD,EACpBpD,MAAOiC,EADamB,EACbnB,eACf,OACIP,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACXpC,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,eACV9D,EAAMuC,IAAI,SAAAoF,GAAC,OAAIjG,EAAAC,EAAAC,cAAA,UAAQkC,UAAW6D,EAAExJ,QAAU,yBAA2B,2BACtE8F,QAAS,kBAAMhC,EAAejC,EAAMwC,QAAQmF,MAC5CjG,EAAAC,EAAAC,cAAA,KAAGkC,UAAW6D,EAAExJ,QAAU,cAAgB,sBCwD/CyJ,SA/DM,SAAAzD,GAAmC,IAAhC0D,EAAgC1D,EAAhC0D,KAAMC,EAA0B3D,EAA1B2D,UAAWC,EAAe5D,EAAf4D,SAC7B3H,EAAYiD,qBAAWvE,GAAvBsB,QAwDR,OACIsB,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YAtDE,QAAb+D,EAAK/J,KACD+J,EAAK3J,WAAakC,EAAQ0H,GACtBD,EAAK3J,WAAa6J,EACXrG,EAAAC,EAAAC,cAAA,MAAIkC,UAAU,kBAAd,IAAiC+D,EAAK7J,cAAc+J,GAAU9J,QAG9DyD,EAAAC,EAAAC,cAAA,MAAIkC,UAAU,UAAd,IAAyB+D,EAAK7J,cAAc+J,GAAU9J,QAI7DmC,EAAQ0H,KAAeC,EAChBrG,EAAAC,EAAAC,cAAA,MAAIkC,UAAU,kBAAd,IAAiC+D,EAAK7J,cAAc+J,GAAU9J,QAEhE4J,EAAK3J,WAAa6J,EAChBrG,EAAAC,EAAAC,cAAA,MAAIkC,UAAU,oBAAd,IAAmC+D,EAAK7J,cAAc+J,GAAU9J,QAGhEyD,EAAAC,EAAAC,cAAA,MAAIkC,UAAU,UAAd,IAAyB+D,EAAK7J,cAAc+J,GAAU9J,QAKjE4J,EAAK3J,WAAakC,EAAQ0H,GACtBD,EAAK3J,WAAa6J,EACXrG,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,+BACVpC,EAAAC,EAAAC,cAAA,OAAKmC,IAAK8D,EAAK7J,cAAc+J,GAAU9J,UAI5CyD,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,gBACVpC,EAAAC,EAAAC,cAAA,OAAKmC,IAAK8D,EAAK7J,cAAc+J,GAAU9J,UAKnDmC,EAAQ0H,KAAeC,EAChBrG,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,+BACVpC,EAAAC,EAAAC,cAAA,OAAKmC,IAAK8D,EAAK7J,cAAc+J,GAAU9J,UAG9C4J,EAAK3J,WAAa6J,EAChBrG,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,6BACVpC,EAAAC,EAAAC,cAAA,OAAKmC,IAAK8D,EAAK7J,cAAc+J,GAAU9J,UAI5CyD,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,gBACVpC,EAAAC,EAAAC,cAAA,OAAKmC,IAAK8D,EAAK7J,cAAc+J,GAAU9J,qBC1BxD+J,EAxBQ,WAAM,IAAA5E,EACKC,qBAAWvE,GAAjCkB,EADiBoD,EACjBpD,MAAOO,EADU6C,EACV7C,WACf,OACQmB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uBACIF,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,2BACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACXpC,EAAAC,EAAAC,cAAA,aAAAqG,OAAQ1H,EAAa,EAArB,MAAA0H,OAA2BjI,EAAMO,GAAYxC,SAGrD2D,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACd9D,EAAMO,GAAYvC,cAAcuE,IAC7B,SAAA2F,GAAG,OAAIxG,EAAAC,EAAAC,cAACuG,EAAD,CAAcN,KAAM7H,EAAMO,GACzBmE,IAAK1E,EAAMO,GAAYvC,cAAcwE,QAAQ0F,GAC7CJ,UAAW9H,EAAMwC,QAAQxC,EAAMO,IAC/BwH,SAAU/H,EAAMO,GAAYvC,cAAcwE,QAAQ0F,QAG9DxG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMC,GAAG,IAAIzE,MAAO,CAAE0E,eAAgB,SAAU5G,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,mBAAlB,qBCYrDyE,SA9BI,WAAM,IACbvI,EAAUqD,qBAAWvE,GAArBkB,MACFwI,EAAW,WACb,IAAIC,EAAI,EAKR,OAJAzI,EAAMuC,IAAI,SAAAf,GACc,GAAhBA,EAAKrD,SACLsK,MAEDA,GAEX,OACI/G,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACXpC,EAAAC,EAAAC,cAAC8G,EAAD,MACAhH,EAAAC,EAAAC,cAAC+G,EAAD,OAEJjH,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACXpC,EAAAC,EAAAC,cAAA,yBAAiB4G,IAAjB,IAA8BxI,EAAMmC,QACpCT,EAAAC,EAAAC,cAAA,yBAAiB4G,IAAaxI,EAAMmC,OAAS,IAA7C,OAGRT,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACXpC,EAAAC,EAAAC,cAACgH,EAAD,WCoBLC,eA7CI,WAAM,IAAAzF,EAC+BC,qBAAWvE,GAAvDiC,EADaqC,EACbrC,UADa7B,GAAAkE,EACFN,iBADEM,EACgB0F,WACH3J,oBAAS,IAFtBE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAAAG,EAAA,GAAAA,EAAA,GAcrB,OACIqC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,UACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,eAAf,gBAGApC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,gBAAgBG,QAbrB,WACd,IAAM8E,EAAeC,SAASC,uBAAuB,iBAAiB,GAChEC,EAAUF,SAASC,uBAAuB,YAAY,GAE5DF,EAAaI,iBAAiB,QAAS,WACnCD,EAAQE,UAAUrH,OAAO,cASrBL,EAAAC,EAAAC,cAAA,QAAMkC,UAAU,cAChBpC,EAAAC,EAAAC,cAAA,QAAMkC,UAAU,cAChBpC,EAAAC,EAAAC,cAAA,QAAMkC,UAAU,eAEpBpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACXpC,EAAAC,EAAAC,cAAA,MAAIkC,UAAU,YACVpC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGkC,UAAU,YAAYuF,KAAK,KAA9B,SACJ3H,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGkC,UAAU,aAAb,SACApC,EAAAC,EAAAC,cAAA,MAAIkC,UAAU,eACVpC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGkC,UAAU,WAAWuF,KAAK,aAA7B,aACJ3H,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGkC,UAAU,WAAWuF,KAAK,SAA7B,WAGXtI,EACG,KAEAW,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGyH,KAAK,SAAQ3H,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,6BAClCpC,EAAAC,EAAAC,cAAA,oCCzBb0H,EAfK,WAAM,IAAAlG,EACYC,qBAAWvE,GAArCkB,EADcoD,EACdpD,MAAOiC,EADOmB,EACPnB,eACf,OACQP,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACXpC,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,eACd9D,EAAMuC,IAAI,SAAAoF,GAAC,OAAIjG,EAAAC,EAAAC,cAAA,UAAQkC,UAA0B,OAAf6D,EAAEzJ,SAAoB,2BAA6B,yBACtE+F,QAAS,kBAAMhC,EAAejC,EAAMwC,QAAQmF,MAC5CjG,EAAAC,EAAAC,cAAA,KAAGkC,UAA0B,OAAf6D,EAAEzJ,SAAoB,wBAA0B,uBCW/EuJ,EArBA,WACX,OACI/F,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACXpC,EAAAC,EAAAC,cAAA,qBACIF,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,SACXpC,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,gBACdpC,EAAAC,EAAAC,cAAA,KAAGkC,UAAU,kBAEjBpC,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,SACXpC,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,kBACdpC,EAAAC,EAAAC,cAAA,KAAGkC,UAAU,2BAEjBpC,EAAAC,EAAAC,cAAA,2BCOT2H,EAnBA,SAAApF,GAAqB,IAAlB0D,EAAkB1D,EAAlB0D,KAAMxF,EAAY8B,EAAZ9B,MAAYe,EACEC,qBAAWvE,GAArCsD,EADwBgB,EACxBhB,UADwBgB,EACb7C,WACnB,MAEiB,QAAbsH,EAAK/J,KACL4D,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACPpC,EAAAC,EAAAC,cAAA,MAAIkC,UAAW+D,EAAK3J,WAAamE,EAAQ,iBAAmB,SACxD4B,QAAS,kBAAM7B,EAAUC,KAC5BwF,EAAK7J,cAAcqE,GAAOpE,SAG/ByD,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAW+D,EAAK3J,WAAamE,EAAQ,8BAAgC,eAC1E4B,QAAS,kBAAM7B,EAAUC,KACrBX,EAAAC,EAAAC,cAAA,OAAKmC,IAAK8D,EAAK7J,cAAcqE,GAAOpE,YCsBzCuL,EAnCE,WAAM,IAAApG,EACuEC,qBAAWvE,GAA7FkB,EADWoD,EACXpD,MAAOO,EADI6C,EACJ7C,WAAY0B,EADRmB,EACQnB,eAAgBtB,EADxByC,EACwBzC,UAAWgC,EADnCS,EACmCT,eAAgBC,EADnDQ,EACmDR,gBACtE,OACKjC,EAqBOe,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,2BACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACfpC,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,uBAAuBG,QAASrB,GAAiBlB,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMC,GAAG,WAAWzE,MAAO,CAAE0E,eAAgB,OAAQmB,MAAM,UAA3D,QAC/D/H,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,iBAAiBG,QAAStB,GAA5C,SAzBhBjB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBACJF,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,2BACXpC,EAAAC,EAAAC,cAAA,OAAKgC,MAAO,CAAEC,aAAc,IAAMC,UAAU,OACxCpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACXpC,EAAAC,EAAAC,cAAA,aAAAqG,OAAQ1H,EAAa,EAArB,MAAA0H,OAA2BjI,EAAMO,GAAYxC,SAGrD2D,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACN9D,EAAMO,GAAYvC,cAAcuE,IAC7B,SAAA2F,GAAG,OAAIxG,EAAAC,EAAAC,cAAC8H,EAAD,CAAQ7B,KAAM7H,EAAMO,GACvBmE,IAAK1E,EAAMO,GAAYvC,cAAcwE,QAAQ0F,GAC7C7F,MAAOrC,EAAMO,GAAYvC,cAAcwE,QAAQ0F,QAG/DxG,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,kBAAkBG,QAAS,kBAAMhC,EAAe1B,EAAW,KAA7E,eCADoJ,EAjBE,WAGb,OADC7G,EAD4BO,qBAAWvE,GAAhCgE,mBACU,GAEdpB,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACXpC,EAAAC,EAAAC,cAACgI,EAAD,MACAlI,EAAAC,EAAAC,cAACiI,EAAD,OAEJnI,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACXpC,EAAAC,EAAAC,cAACkI,EAAD,UCALC,EAfE,WAAM,IAAA3G,EAEoBC,qBAAWvE,GAA1CH,EAFWyE,EAEXzE,SAIR,OAFAmE,EAJmBM,EAEDN,mBAED,GAGbpB,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACVnF,EAAS4D,IAAI,SAAAf,GAAI,OAAIE,EAAAC,EAAAC,cAACoI,EAAD,CAAUtF,IAAKlD,EAAKlD,GAAIkD,KAAMA,SCyBrDyI,EAhCW,WAAM,IAAA7G,EAEKC,qBAAWvE,GAApCsC,EAFoBgC,EAEpBhC,OAAQW,EAFYqB,EAEZrB,OAAQP,EAFI4B,EAEJ5B,KAExB,OACIE,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAOC,KAAMnC,EAAQoC,OAAQzB,GACzBL,EAAAC,EAAAC,cAAC0B,EAAA,EAAMG,OAAP,KACI/B,EAAAC,EAAAC,cAAC0B,EAAA,EAAMI,MAAP,KAAclC,EAAK1D,OAEvB4D,EAAAC,EAAAC,cAAC0B,EAAA,EAAMK,KAAP,KACIjC,EAAAC,EAAAC,cAAA,OAAKgC,MAAO,CAAEC,aAAc,IAAMC,UAAU,OACxCpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,oBACXpC,EAAAC,EAAAC,cAAA,OAAKmC,IAAKvC,EAAKjD,UAAWuF,UAAU,mCAG5CpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACXpC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,4BAA4BJ,EAAKhD,WACpCkD,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAyBJ,EAAK/C,QAErCiD,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACXpC,EAAAC,EAAAC,cAAA,SAAIJ,EAAK9C,gBAIrBgD,EAAAC,EAAAC,cAAC0B,EAAA,EAAMU,OAAP,KACItC,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,iBAAiBG,QAASlC,GAA5C,YCFDmI,EAzBM,SAAA/F,GAAc,IAAX3C,EAAW2C,EAAX3C,KACZQ,EAAcqB,qBAAWvE,GAAzBkD,UAER,OACIN,EAAAC,EAAAC,cAACF,EAAAC,EAAMyC,SAAP,KACI1C,EAAAC,EAAAC,cAAA,OAAKgC,MAAO,CAAEC,aAAc,IAAMC,UAAU,YACxCpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,2BACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACXpC,EAAAC,EAAAC,cAAA,OAAKmC,IAAKvC,EAAKjD,UAAWuF,UAAU,kCAExCpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,YACXpC,EAAAC,EAAAC,cAAA,UAAKJ,EAAK1D,MACV4D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,4BAA4BJ,EAAKhD,WACpCkD,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAyBJ,EAAK/C,OACjCiD,EAAAC,EAAAC,cAAA,UAAQkC,UAAU,8BAA8BG,QAAS,kBAAMjC,EAAUR,KAAzE,kBAKhBE,EAAAC,EAAAC,cAACuI,EAAD,QCNGC,EAfM,WAAM,IAAAhH,EAEoBC,qBAAWvE,GAA9CT,EAFe+E,EAEf/E,aAIR,OAFAyE,EAJuBM,EAEDN,mBAEL,GAGbpB,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,aACXpC,EAAAC,EAAAC,cAAA,OAAKkC,UAAU,OACVzF,EAAakE,IAAI,SAAAf,GAAI,OAAIE,EAAAC,EAAAC,cAACyI,EAAD,CAAc3F,IAAKlD,EAAKlD,GAAIkD,KAAMA,SCCvD8I,mLAIf,OACI5I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2I,EAAD,KACA7I,EAAAC,EAAAC,cAAC4I,EAAD,MACA9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjG,IACjCjD,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWb,IAC/BrI,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWR,IACnC1I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWjB,IAC/BjI,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWrC,IACjC7G,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOE,KAAK,cAAcC,UAAW7F,aAbhBuC,aAAZgD,EACZ/C,YAAc+C,EAAI9C,KCL3B,IAAMqD,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BJ,SAASC,EAAiBC,GACxBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpG,QACf8F,UAAUC,cAAcQ,WAK1B9I,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB8I,MAAM,SAAAC,GACLhJ,QAAQgJ,MAAM,4CAA6CA,KC/DjE,IAAMC,EAAUjD,SAASkD,qBAAqB,QAAQ,GAAGC,aAAa,QAChEC,EAAcpD,SAASqD,eAAe,QAE5CC,IAASC,OACP7K,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAeC,SAAUR,GACvBvK,EAAAC,EAAAC,cAAC8K,EAAD,OAEFN,GDMa,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIsB,IAAIC,GAAwB7B,OAAOC,UAC3C6B,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO5B,iBAAiB,OAAQ,WAC9B,IAAMiC,EAAK,GAAAnD,OAAM2E,GAAN,sBAEP/B,EAwCV,SAAkCO,GAEhC3E,MAAM2E,GACHI,KAAK,SAAApF,GAGkB,MAApBA,EAAS0G,SACuD,IAAhE1G,EAAS2G,QAAQC,IAAI,gBAAgBxK,QAAQ,cAG7C6I,UAAUC,cAAc2B,MAAMzB,KAAK,SAAAC,GACjCA,EAAayB,aAAa1B,KAAK,WAC7BT,OAAOC,SAASmC,aAKpBhC,EAAgBC,KAGnBW,MAAM,WACL/I,QAAQC,IACN,mEA5DAmK,CAAwBhC,GAGxBD,EAAgBC,MCvBxBiC","file":"static/js/main.25d7ff8a.chunk.js","sourcesContent":["const quizQuestions = [\r\n    {\r\n        type: \"text\",\r\n        text: \"How much can a loggerhead weigh?\",\r\n        possibilities: [\r\n            {\r\n                answer: \"Up to 20kg\"\r\n            },\r\n            {\r\n                answer: \"Up to 115kg\"\r\n            },\r\n            {\r\n                answer: \"Up to 220kg\"\r\n            },\r\n            {\r\n                answer: \"Up to 500kg\"\r\n            }\r\n        ],\r\n        selected: null,\r\n        correct: null\r\n    },\r\n    {\r\n        type: \"text\",\r\n        text: \"What is the typical lifespan of a Green Sea Turtle?\",\r\n        possibilities: [\r\n            {\r\n                answer: \"150 years\"\r\n            },\r\n            {\r\n                answer: \"10 years\"\r\n            },\r\n            {\r\n                answer: \"80 years\"\r\n            },\r\n            {\r\n                answer: \"40 years\"\r\n            }\r\n        ],\r\n        selected: null,\r\n        correct: null\r\n    },\r\n    {\r\n        type: \"image\",\r\n        text: \"Which of these is the Alligator Snapping Turtle?\",\r\n        possibilities: [\r\n            {\r\n                answer: \"https://res.cloudinary.com/djxscnpzf/image/upload/c_scale,w_560/v1538573536/2399413165_bcc8031cac_z_fqaexq.jpg\"\r\n            },\r\n            {\r\n                answer: \"https://res.cloudinary.com/djxscnpzf/image/upload/c_scale,w_560/v1538573475/olive-ridley1_bdrbzh.jpg\"\r\n            },\r\n            {\r\n                answer: \"https://res.cloudinary.com/djxscnpzf/image/upload/c_scale,w_560/v1538573717/Leatherback-turtle-007_p1qytx.jpg\"\r\n            },\r\n            {\r\n                answer: \"https://res.cloudinary.com/djxscnpzf/image/upload/c_scale,w_560/v1538573639/Alligator_snapping_turtle_-_Geierschildkr_C3_B6te_-_Alligatorschildkr_C3_B6te_-_Macrochelys_temminckii_01_uwqvbi.jpg\"\r\n            }\r\n        ],\r\n        selected: null,\r\n        correct: null\r\n    },\r\n    {\r\n        type: \"image\",\r\n        text: \"Which of these is the Green Turtle?\",\r\n        possibilities: [\r\n            {\r\n                answer: \"https://res.cloudinary.com/djxscnpzf/image/upload/c_scale,w_560/v1538573240/Sea-Turtles-Habitat_kiipu7.jpg\"\r\n            },\r\n            {\r\n                answer: \"https://res.cloudinary.com/djxscnpzf/image/upload/c_scale,w_560/v1538573596/Kemp_s_Ridley_sea_turtle_nesting_jqe0fg.jpg\"\r\n            },\r\n            {\r\n                answer: \"https://res.cloudinary.com/djxscnpzf/image/upload/c_scale,w_560/v1538573639/Alligator_snapping_turtle_-_Geierschildkr_C3_B6te_-_Alligatorschildkr_C3_B6te_-_Macrochelys_temminckii_01_uwqvbi.jpg\"\r\n            },\r\n            {\r\n                answer: \"https://res.cloudinary.com/djxscnpzf/image/upload/c_scale,w_560/v1538573676/SCR_290360hawskbill-why-matter-LG_wqf0kl.jpg\"\r\n            }\r\n        ],\r\n        selected: null,\r\n        correct: null\r\n    },\r\n    {\r\n        type: \"text\",\r\n        text: \"Where does the Kemp's Ridley Sea Turtle live?'\",\r\n        possibilities: [\r\n            {\r\n                answer: \"Tropical waters all around the world\"\r\n            },\r\n            {\r\n                answer: \"Eastern Australia\"\r\n            },\r\n            {\r\n                answer: \"Coastal North Atlantic\"\r\n            },\r\n            {\r\n                answer: \"South pacific islands\"\r\n            }\r\n        ],\r\n        selected: null,\r\n        correct: null\r\n    },\r\n    {\r\n        type: \"text\",\r\n        text: \"What is the most common turtle in US waters?\",\r\n        possibilities: [\r\n            {\r\n                answer: \"Loggerhead turtle\"\r\n            },\r\n            {\r\n                answer: \"Leatherback turtle\"\r\n            },\r\n            {\r\n                answer: \"Hawksbill Turtle\"\r\n            },\r\n            {\r\n                answer: \"Alligator Snapping Turtle\"\r\n            }\r\n        ],\r\n        selected: null,\r\n        correct: null\r\n    },\r\n    {\r\n        type: \"text\",\r\n        text: \"What is the largest sea turtle on earth?\",\r\n        possibilities: [\r\n            {\r\n                answer: \"Eastern Snake Necked Turtle\"\r\n            },\r\n            {\r\n                answer: \"Olive Ridley Sea Turtle\"\r\n            },\r\n            {\r\n                answer: \"Kemp's Ridley Sea Turtle'\"\r\n            },\r\n            {\r\n                answer: \"Leatherback\"\r\n            }\r\n        ],\r\n        selected: null,\r\n        correct: null\r\n    },\r\n    {\r\n        type: \"image\",\r\n        text: \"Which of these is the Olive Ridley Turtle?\",\r\n        possibilities: [\r\n            {\r\n                answer: \"https://res.cloudinary.com/djxscnpzf/image/upload/c_scale,w_560/v1538573757/loggerheadTurtle_2651448b_fuxtrz.jpg\"\r\n            },\r\n            {\r\n                answer: \"https://res.cloudinary.com/djxscnpzf/image/upload/c_scale,w_560/v1538573676/SCR_290360hawskbill-why-matter-LG_wqf0kl.jpg\"\r\n            },\r\n            {\r\n                answer: \"https://res.cloudinary.com/djxscnpzf/image/upload/c_scale,w_560/v1538573475/olive-ridley1_bdrbzh.jpg\"\r\n            },\r\n            {\r\n                answer: \"https://res.cloudinary.com/djxscnpzf/image/upload/c_scale,w_560/v1538573596/Kemp_s_Ridley_sea_turtle_nesting_jqe0fg.jpg\"\r\n            }\r\n        ],\r\n        selected: null,\r\n        correct: null\r\n    },\r\n    {\r\n        type: \"text\",\r\n        text: \"How Heavy can a leatherback turtle be?\",\r\n        possibilities: [\r\n            {\r\n                answer: \"900kg\"\r\n            },\r\n            {\r\n                answer: \"40kg\"\r\n            },\r\n            {\r\n                answer: \"110kg\"\r\n            },\r\n            {\r\n                answer: \"300kg\"\r\n            }\r\n        ],\r\n        selected: null,\r\n        correct: null\r\n    },\r\n    {\r\n        type: \"text\",\r\n        text: \"Which of these turtles are herbivores?\",\r\n        possibilities: [\r\n            {\r\n                answer: \"Loggerhead Turtle\"\r\n            },\r\n            {\r\n                answer: \"Hawksbill Turtle\"\r\n            },\r\n            {\r\n                answer: \"Leatherback Turtle\"\r\n            },\r\n            {\r\n                answer: \"Green Turtle\"\r\n            }\r\n        ],\r\n        selected: null,\r\n        correct: null\r\n    }\r\n]\r\nexport default quizQuestions","const answerData = [1, 2, 3, 0, 2, 0, 3, 2, 0, 3]\r\nexport default answerData","const buildingData = [\r\n    {\r\n        id: 1,\r\n        type: \"Burz Al Arab\",\r\n        image_url: \"image/Building/BurzAlArab.jpg\",\r\n        locations: \"Dubai, UAE\",\r\n        built: \".. sq km\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 2,\r\n        type: \"Burz Dubai\",\r\n        image_url: \"image/Building/BurzDubai.jpg\",\r\n        locations: \"Dubai, UAE\",\r\n        built: \".. sq km\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 3,\r\n        type: \"Gherkin\",\r\n        image_url: \"image/Building/Gherkin.jpg\",\r\n        locations: \"London, England\",\r\n        built: \".. sq km\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 4,\r\n        type: \"Sheraton Huzhou Hot Spring Resort\",\r\n        image_url: \"image/Building/China.jpg\",\r\n        locations: \"China\",\r\n        built: \".. sq km\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 5,\r\n        type: \"Clock Tower\",\r\n        image_url: \"image/Building/ClockTower.jpg\",\r\n        locations: \"Mecca, Saudi Arabia\",\r\n        built: \".. sq km\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 6,\r\n        type: \"Empire Estate\",\r\n        image_url: \"image/Building/Empirestate.jpg\",\r\n        locations: \"New York, USA\",\r\n        built: \".. sq km\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 7,\r\n        type: \"Grand Palais\",\r\n        image_url: \"image/Building/GrandPalais.jpg\",\r\n        locations: \"Paris, France\",\r\n        built: \".. sq km\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 8,\r\n        type: \"Kremlin Palace\",\r\n        image_url: \"image/Building/Kremlin.jpg\",\r\n        locations: \"Moscow, Russia\",\r\n        built: \".. sq km\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 9,\r\n        type: \"Marina Bay\",\r\n        image_url: \"image/Building/MarinaBay.jpg\",\r\n        locations: \"Singapore\",\r\n        built: \".. sq km\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 10,\r\n        type: \"Petronas Towers\",\r\n        image_url: \"image/Building/PetronasTowers.jpg\",\r\n        locations: \"Kuala Lumpur, Malaysia\",\r\n        built: \".. sq km\",\r\n        description: \"Some description\"\r\n    }\r\n];\r\nexport default buildingData","const cityData = [\r\n    {\r\n        id: 1,\r\n        type: \"New York\",\r\n        image_url: \"image/City/NewYork.jpg\",\r\n        locations: \"North America\",\r\n        size: \".. sq km\",\r\n        population: \".. millions\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 2,\r\n        type: \"Toronto\",\r\n        image_url: \"image/City/Toronto.jpg\",\r\n        locations: \"North America\",\r\n        size: \".. sq km\",\r\n        population: \".. millions\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 3,\r\n        type: \"Dubai\",\r\n        image_url: \"image/City/Dubai.jpg\",\r\n        locations: \"Middle East\",\r\n        size: \".. sq km\",\r\n        population: \".. millions\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 4,\r\n        type: \"Singapore City\",\r\n        image_url: \"image/City/Singapore.jpg\",\r\n        locations: \"Asia\",\r\n        size: \".. sq km\",\r\n        population: \".. millions\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 5,\r\n        type: \"Tokyo\",\r\n        image_url: \"image/City/Tokyo.jpg\",\r\n        locations: \"Asia\",\r\n        size: \".. sq km\",\r\n        population: \".. millions\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 6,\r\n        type: \"Sydney\",\r\n        image_url: \"image/City/Sydney.jpg\",\r\n        locations: \"Australia\",\r\n        size: \".. sq km\",\r\n        population: \".. millions\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 7,\r\n        type: \"London\",\r\n        image_url: \"image/City/London.jpg\",\r\n        locations: \"Europe\",\r\n        size: \".. sq km\",\r\n        population: \".. millions\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 8,\r\n        type: \"Paris\",\r\n        image_url: \"image/City/Paris.jpg\",\r\n        locations: \"Europe\",\r\n        size: \".. sq km\",\r\n        population: \".. millions\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 9,\r\n        type: \"San Francisco\",\r\n        image_url: \"image/City/SanFrancisco.jpg\",\r\n        locations: \"North America\",\r\n        size: \".. sq km\",\r\n        population: \".. millions\",\r\n        description: \"Some description\"\r\n    },\r\n    {\r\n        id: 10,\r\n        type: \"Kuala Lumpur\",\r\n        image_url: \"image/City/KualaLumpur.jpg\",\r\n        locations: \"Asia\",\r\n        size: \".. sq km\",\r\n        population: \".. millions\",\r\n        description: \"Some description\"\r\n    }\r\n];\r\nexport default cityData","import React, { createContext, useState, useEffect } from 'react'\r\nimport turtlesData from '../Data/TurtleData'\r\nimport quizQuestions from '../Data/QuizQuestion'\r\nimport answerData from '../Data/AnswerData'\r\nimport getBuildingData from '../Data/BuildingData'\r\nimport getCityData from '../Data/CityData'\r\nexport const AppContext = createContext()\r\n\r\nconst ContextProvider = (props) => {\r\n\r\n    const [buildingData, setBuilding] = useState(getBuildingData)\r\n    const [cityData, setCity] = useState(getCityData)\r\n    const [data, setData] = useState(getCityData)\r\n    const [quizs, setQuizs] = useState(quizQuestions)\r\n    const [ansData, setAnsData] = useState(answerData)\r\n    const [activeQues, setActiveQues] = useState(0)\r\n    const [completed, setCompleted] = useState(false)\r\n    const [startQuiz, setStartQuiz] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n       \r\n    }, [])\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const showActiveQues = (number) => {\r\n        if (number > quizs.length - 1) {\r\n            number = quizs.length - 1\r\n        }\r\n        else {\r\n            setActiveQues(number)\r\n        }    \r\n    }\r\n    const toggle = () => setIsOpen(!isOpen)\r\n    const [item, setItem] = useState({})\r\n    const showModal = (item) => {\r\n        setItem(item)\r\n        setIsOpen(true)\r\n    }\r\n    const selectAns = (index) => {\r\n        const newList = quizs.map((item) => {\r\n            if (quizs.indexOf(item) === activeQues) {\r\n                const updatedItem = {\r\n                    ...item,\r\n                    selected: index,\r\n                }\r\n\r\n                return updatedItem;\r\n            }\r\n            return item;\r\n        })\r\n        setQuizs(newList)\r\n\r\n        let unAnswered = newList.filter(item => item.selected == null)\r\n        if (unAnswered.length == 0) {\r\n            setCompleted(true)\r\n        }\r\n    }\r\n\r\n    const updateCorrectAnswer = () => {\r\n        const newList = quizs.map((item) => {\r\n            if (item.selected === ansData[quizs.indexOf(item)]) {\r\n                const updatedItem = {\r\n                    ...item,\r\n                    correct: true\r\n                }\r\n                return updatedItem\r\n            }\r\n            else {\r\n                const updatedItem = {\r\n                    ...item,\r\n                    correct: false\r\n                }\r\n                return updatedItem\r\n            }\r\n            return item\r\n        })\r\n        setQuizs(newList)\r\n    }\r\n\r\n    const resetCompleted = () => {\r\n        setCompleted(false)\r\n    }\r\n\r\n    const resetActiveQues = () => {\r\n        updateCorrectAnswer()\r\n        setActiveQues(0)\r\n    }\r\n\r\n    const startQuizClicked = (flag) => {\r\n        console.log(\"Start clicked\", flag)\r\n        setStartQuiz(flag)\r\n    }\r\n    \r\n    return (\r\n        <AppContext.Provider value={{\r\n            data, isOpen, toggle, item, showModal, quizs, activeQues,\r\n            showActiveQues, selectAns, completed, resetCompleted, ansData,\r\n            resetActiveQues, startQuizClicked, startQuiz, cityData, buildingData\r\n        }}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n        )\r\n}\r\n\r\nexport default ContextProvider","import React, { useState, useContext } from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { AppContext } from '../Context/ContextProvider';\r\nimport '../css/Modal.css'\r\n\r\n\r\nconst CityModalInfo = () => {\r\n\r\n    const { isOpen, toggle, item } = useContext(AppContext)\r\n\r\n    return (\r\n        <Modal show={isOpen} onHide={toggle}>\r\n            <Modal.Header>\r\n                <Modal.Title>{item.type}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div style={{ marginBottom: 15 }} className=\"row\">\r\n                    <div className=\"col-md-8 mx-auto\">\r\n                        <img src={item.image_url} className=\"rounded img-fluid card-image\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <p><strong>Location: </strong>{item.locations}</p>\r\n                        <p><strong>Size: </strong>{item.size}</p>\r\n                        <p><strong>Population: </strong>{item.population}</p>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <p>{item.description}</p>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-danger\" onClick={toggle}>Close</button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CityModalInfo","import React, { useState, useContext } from 'react'\r\nimport '../css/Image.css'\r\nimport { AppContext } from '../Context/ContextProvider'\r\nimport CityModalInfo from '../ModalInfos/CityModalInfo'\r\n\r\nconst CityItem = ({ item }) => {\r\n    const { showModal } = useContext(AppContext)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ marginBottom: 25 }} className=\"col-sm-6\">\r\n                <div className=\"card card-body bg-light\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <img src={item.image_url} className=\"rounded img-fluid card-image\" />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <h4>{item.type}</h4>\r\n                            <p><strong>Location: </strong>{item.locations}</p>\r\n                            <p><strong>Size: </strong>{item.size}</p>\r\n                            <p><strong>Population: </strong>{item.population}</p>\r\n                            <button className=\"btn btn-primary float-right\" onClick={() => showModal(item)}>Learn more</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <CityModalInfo />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CityItem","const items = [\r\n    {\r\n        src: 'image/City/Dubai.jpg',\r\n        altText: 'Slide 1',\r\n        caption: '',\r\n        header: 'Dubai',\r\n        key: '1'\r\n    },\r\n    {\r\n        src: 'image/City/KualaLumpur.jpg',\r\n        altText: 'Slide 2',\r\n        caption: '',\r\n        header: 'Kuala Lumpur',\r\n        key: '2'\r\n    },\r\n    {\r\n        src: 'image/City/NewYork.jpg',\r\n        altText: 'Slide 3',\r\n        caption: '',\r\n        header: 'New York',\r\n        key: '3'\r\n    },\r\n]\r\n\r\nexport default items","const items = [\r\n    {\r\n        src: 'image/Building/GrandPalais.jpg',\r\n        altText: 'Slide 1',\r\n        caption: '',\r\n        header: 'Grand Palais',\r\n        key: '1'\r\n    },\r\n    {\r\n        src: 'image/Building/ClockTower.jpg',\r\n        altText: 'Slide 2',\r\n        caption: '',\r\n        header: 'Clock Tower',\r\n        key: '2'\r\n    },\r\n    {\r\n        src: 'image/Building/Kremlin.jpg',\r\n        altText: 'Slide 3',\r\n        caption: '',\r\n        header: 'Kremlin',\r\n        key: '3'\r\n    },\r\n]\r\n\r\nexport default items","import React, { useContext } from 'react'\r\nimport { UncontrolledCarousel } from 'reactstrap'\r\nimport { AppContext } from './Context/ContextProvider'\r\nimport CityItem from './FactCategory/CityItem'\r\nimport cityItems from './Carousel/CityCarousel'\r\nimport buildingItems from './Carousel/BuildingCarousel'\r\nimport './css/Carousel.css'\r\n\r\nconst Home = () => {\r\n    \r\n    const { data, startQuizClicked } = useContext(AppContext)\r\n    \r\n    startQuizClicked(false)\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {/*data.map(item => <CityItem key={item.id} item={item} />)*/}\r\n                <div className=\"col-md-6 mb-2\">\r\n                    <h4> Learn about cities ....</h4>\r\n                    <UncontrolledCarousel items={cityItems} />\r\n                </div>\r\n                <div className=\"col-md-6 mb-2\">\r\n                    <h4> Learn about buildings ....</h4>\r\n                    <UncontrolledCarousel items={buildingItems} />\r\n                </div>\r\n            </div>\r\n      </div>\r\n    )\r\n  \r\n}\r\nexport default Home","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { AppContext } from './Context/ContextProvider';\r\n\r\nconst Counter = () => {\r\n    const { quizs } = useContext(AppContext)\r\n    const [currentCount, setCurrentCount] = useState(0)\r\n\r\n    console.log(quizs)\r\n    const incrementCounter = () => {\r\n      setCurrentCount({\r\n      currentCount: currentCount + 1\r\n        })\r\n      }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p aria-live=\"polite\">Current count: <strong>{currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={incrementCounter}>Increment</button>\r\n      </div>\r\n    )\r\n}\r\nexport default Counter","import React from 'react'\r\n\r\n\r\nconst Legend = () => {\r\n    return (\r\n        <div className=\"col-sm-4\">\r\n            <h5>Legend:</h5>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <button className=\"btn btn-info\">\r\n                        <i className=\"fa fa-check\"></i>\r\n                    </button>\r\n                    <p>Correct</p>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <button className=\"btn btn-danger\">\r\n                        <i className=\"fa fa-times\"></i>\r\n                    </button>\r\n                    <p>Incorrect</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Legend","import React, { useContext } from 'react'\r\nimport { AppContext } from '../Context/ContextProvider'\r\n\r\n\r\nconst ResultProgressBar = () => {\r\n    const { quizs, showActiveQues } = useContext(AppContext)\r\n    return (\r\n        <div className=\"col-sm-8\">\r\n            <h2>Progress:</h2>\r\n            <div className=\"btn-toolbar\">\r\n                {quizs.map(x => <button className={x.correct ? \"btn btn-info ml-2 mb-2\" : \"btn btn-danger ml-2 mb-2\"}\r\n                    onClick={() => showActiveQues(quizs.indexOf(x))}>\r\n                    <i className={x.correct ? \"fa fa-check\" : \"fa fa-times\"}></i>\r\n                </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ResultProgressBar","import React, { useContext } from 'react'\r\nimport '../css/Answer.css'\r\nimport '../css/Image.css'\r\nimport { AppContext } from '../Context/ContextProvider'\r\n\r\nconst ResultAnswer = ({ ques, indexQues, indexAns }) => {\r\n    const { ansData } = useContext(AppContext)\r\n\r\n    const renderContent = () => {\r\n        if (ques.type == \"text\") {\r\n            if (ques.selected === ansData[indexQues]) { /* if the answer if correct*/\r\n                if (ques.selected === indexAns) {\r\n                    return <h4 className='answer bg-info'> {ques.possibilities[indexAns].answer}</h4>\r\n                }\r\n                else {\r\n                    return <h4 className='answer'> {ques.possibilities[indexAns].answer}</h4>\r\n                }\r\n            }\r\n            else { /* if the answer is incorrect*/\r\n                if (ansData[indexQues] === indexAns) {\r\n                    return <h4 className='answer bg-info'> {ques.possibilities[indexAns].answer}</h4>\r\n                }\r\n                else if (ques.selected === indexAns) {\r\n                    return <h4 className='answer bg-danger'> {ques.possibilities[indexAns].answer}</h4>\r\n                }\r\n                else {\r\n                    return <h4 className='answer'> {ques.possibilities[indexAns].answer}</h4>\r\n                }\r\n            }\r\n        }\r\n        else { /* if image type */\r\n            if (ques.selected === ansData[indexQues]) { /* if the answer if correct*/\r\n                if (ques.selected === indexAns) {\r\n                    return <div className=\"image-answer image-selected\">\r\n                                <img src={ques.possibilities[indexAns].answer} />\r\n                           </div> \r\n                }\r\n                else {\r\n                    return <div className=\"image-answer\">\r\n                                <img src={ques.possibilities[indexAns].answer} />\r\n                           </div> \r\n                }\r\n            }\r\n            else { /* if the answer is incorrect*/\r\n                if (ansData[indexQues] === indexAns) {\r\n                    return <div className=\"image-answer image-selected\">\r\n                                <img src={ques.possibilities[indexAns].answer} />\r\n                           </div> \r\n                }\r\n                else if (ques.selected === indexAns) {\r\n                    return <div className=\"image-answer image-danger\">\r\n                                <img src={ques.possibilities[indexAns].answer} />\r\n                           </div> \r\n                }\r\n                else {\r\n                    return <div className=\"image-answer\">\r\n                                <img src={ques.possibilities[indexAns].answer} />\r\n                           </div> \r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"col-sm-6\">\r\n            {renderContent()}\r\n        </div>\r\n    )\r\n}\r\nexport default ResultAnswer","import React, { useContext } from 'react'\r\nimport '../css/Answer.css'\r\nimport { AppContext } from '../Context/ContextProvider'\r\nimport ResultAnswer from './ResultAnswer'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ResultQuesArea = () => {\r\n    const { quizs, activeQues } = useContext(AppContext)\r\n    return (\r\n            <div>\r\n            <h3>Question:</h3>  \r\n                <div className=\"card card-body bg-light\">\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <h4>{`${activeQues + 1}. ${quizs[activeQues].text}`}</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    {quizs[activeQues].possibilities.map(\r\n                        ans => <ResultAnswer ques={quizs[activeQues]}\r\n                                key={quizs[activeQues].possibilities.indexOf(ans)}\r\n                                indexQues={quizs.indexOf(quizs[activeQues])}\r\n                                indexAns={quizs[activeQues].possibilities.indexOf(ans)}/>\r\n                        )}\r\n                    </div>\r\n                    <Link to='/' style={{ textDecoration: \"none\" }}><button className=\"btn btn-primary\">Back to facts</button></Link>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default ResultQuesArea","import React, { useContext } from 'react'\r\nimport Legend from './Legend'\r\nimport ResultProgressBar from './ResultProgressBar'\r\nimport ResultQuesArea from './ResultQuesArea'\r\nimport { AppContext } from '../Context/ContextProvider'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\n\r\nconst ResultPage = () => {\r\n    const { quizs } = useContext(AppContext)\r\n    const calScore = () => {\r\n        let i = 0\r\n        quizs.map(item => {\r\n            if (item.correct == true)\r\n                i++\r\n        })\r\n        return i\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <ResultProgressBar />\r\n                <Legend />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <h3>Your score: {calScore()}/{quizs.length}</h3>\r\n                    <h3>Percentage: {calScore() / quizs.length * 100}%</h3>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                    <ResultQuesArea />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ResultPage","import React, { Component, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NewNavMenu.css';\r\nimport { useContext } from 'react';\r\nimport { AppContext } from './Context/ContextProvider';\r\n\r\nconst NewNavMenu = () => {\r\n    const { startQuiz, startQuizClicked, selectFact } = useContext(AppContext)\r\n    const [collapsed, setCollapsed] = useState(true)\r\n    const toggleNavbar = () => {\r\n        setCollapsed(!collapsed)\r\n    }\r\n    const hambarger = () => {\r\n        const toggleButton = document.getElementsByClassName('toggle-button')[0]\r\n        const topList = document.getElementsByClassName('top-list')[0]\r\n        \r\n        toggleButton.addEventListener('click', () => {\r\n            topList.classList.toggle('active')\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"brand-title\">\r\n                Facts & Quiz\r\n            </div>\r\n            <div className=\"toggle-button\" onClick={hambarger}>\r\n                <span className=\"hambarger\"></span>\r\n                <span className=\"hambarger\"></span>\r\n                <span className=\"hambarger\"></span>\r\n            </div>\r\n            <div className=\"nav-links\">\r\n                <ul className=\"top-list\">\r\n                    <li><a className=\"main-link\" href=\"/\">Home</a></li>\r\n                    <li>\r\n                        <a className=\"main-link\">Facts</a>\r\n                        <ul className=\"bottom-list\">\r\n                            <li><a className=\"sub-link\" href=\"/building\">Building</a></li>\r\n                            <li><a className=\"sub-link\" href=\"/city\">City</a></li>\r\n                        </ul>\r\n                    </li>\r\n                    {startQuiz ?\r\n                        null\r\n                        :\r\n                        <li><a href=\"/quiz\"><button className=\"btn btn-warning btn-align\">\r\n                            <strong>Start Quiz</strong></button></a>\r\n                        </li>}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default NewNavMenu","import React, { useContext } from 'react'\r\nimport { AppContext } from '../Context/ContextProvider'\r\n\r\n\r\nconst ProgressBar = () => {\r\n    const { quizs, showActiveQues } = useContext(AppContext)\r\n    return (\r\n            <div className=\"col-sm-8\">\r\n                <h2>Progress:</h2>\r\n                <div className=\"btn-toolbar\">\r\n                {quizs.map(x => <button className={x.selected === null ? \"btn btn-danger ml-2 mb-2\" : \"btn btn-info ml-2 mb-2\"}\r\n                                onClick={() => showActiveQues(quizs.indexOf(x))}>\r\n                                <i className={x.selected === null ? \"fa fa-question-circle\" : \"fa fa-pencil\"}></i>\r\n                               </button>\r\n                    )}\r\n                </div>\r\n            </div> \r\n    )\r\n}\r\nexport default ProgressBar","import React from 'react'\r\n\r\nconst Legend = () => {\r\n    return (\r\n        <div className=\"col-sm-4\">\r\n            <h5>Legend:</h5>\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <button className=\"btn btn-info\">\r\n                            <i className=\"fa fa-pencil\"></i>\r\n                        </button>\r\n                        <p>Answered</p>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <button className=\"btn btn-danger\">\r\n                            <i className=\"fa fa-question-circle\"></i>\r\n                        </button>\r\n                        <p>Unanswered</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default Legend","import React, { useContext } from 'react'\r\nimport '../css/Answer.css'\r\nimport '../css/Image.css'\r\nimport { AppContext } from '../Context/ContextProvider'\r\n\r\nconst Answer = ({ ques, index }) => {\r\n    const { selectAns, activeQues } = useContext(AppContext)\r\n    return (\r\n        \r\n        ques.type == \"text\" ?\r\n        <div className=\"col-sm-6\">\r\n                <h4 className={ques.selected === index ? 'answer bg-info' : 'answer'}\r\n                    onClick={() => selectAns(index)}>\r\n                {ques.possibilities[index].answer}</h4>\r\n        </div>\r\n         :\r\n            <div className=\"col-sm-6\">\r\n                <div className={ques.selected === index ? 'image-answer image-selected' : 'image-answer'}\r\n                onClick={() => selectAns(index)}>\r\n                    <img src={ques.possibilities[index].answer} />\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default Answer","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../css/Answer.css'\r\nimport { AppContext } from '../Context/ContextProvider'\r\nimport Answer from './Answer'\r\n\r\nconst QuesArea = () => {\r\n    const { quizs, activeQues, showActiveQues, completed, resetCompleted, resetActiveQues } = useContext(AppContext)\r\n    return (\r\n        !completed ?\r\n            <div>\r\n                <h3>Question:</h3>\r\n            <div className=\"card card-body bg-light\">\r\n                <div style={{ marginBottom: 15 }} className=\"row\">\r\n                    <div className=\"col-sm-12\">    \r\n                        <h4>{`${activeQues + 1}. ${quizs[activeQues].text}`}</h4>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                        {quizs[activeQues].possibilities.map(\r\n                            ans => <Answer ques={quizs[activeQues]}\r\n                                key={quizs[activeQues].possibilities.indexOf(ans)}\r\n                                index={quizs[activeQues].possibilities.indexOf(ans)} />\r\n                        )}\r\n                </div>\r\n                <button className=\"btn btn-warning\" onClick={() => showActiveQues(activeQues+1)}>Continue</button>\r\n            </div>\r\n            </div>\r\n\r\n            :\r\n                <div className=\"card card-body bg-light\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                        <h4>Are you sure you want to submit your answer?</h4>\r\n                        <button className=\"btn btn-success mr-2\" onClick={resetActiveQues}><Link to='./result' style={{ textDecoration: \"none\", color:\"white\" }}>Yes</Link></button>\r\n                            <button className=\"btn btn-danger\" onClick={resetCompleted}>No</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\nexport default QuesArea","import React, { useContext } from 'react'\r\nimport ProgressBar from './ProgressBar'\r\nimport Legend from './Legend'\r\nimport QuesArea from './QuesArea'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport { AppContext } from '../Context/ContextProvider'\r\n\r\n\r\nconst QuizPage = () => {\r\n    const { startQuizClicked } = useContext(AppContext)\r\n     startQuizClicked(true) \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <ProgressBar />\r\n                <Legend />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                    <QuesArea />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\nexport default QuizPage","import React, { useContext } from 'react'\r\nimport { AppContext } from '../Context/ContextProvider'\r\nimport CityItem from '../FactCategory/CityItem'\r\n\r\nconst CityHome = () => {\r\n\r\n    const { cityData, startQuizClicked } = useContext(AppContext)\r\n\r\n    startQuizClicked(false)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {cityData.map(item => <CityItem key={item.id} item={item} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default CityHome","import React, { useState, useContext } from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { AppContext } from '../Context/ContextProvider';\r\nimport '../css/Modal.css'\r\n\r\n\r\nconst BuildingModalInfo = () => {\r\n\r\n    const { isOpen, toggle, item } = useContext(AppContext)\r\n\r\n    return (\r\n        <Modal show={isOpen} onHide={toggle}>\r\n            <Modal.Header>\r\n                <Modal.Title>{item.type}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div style={{ marginBottom: 15 }} className=\"row\">\r\n                    <div className=\"col-md-8 mx-auto\">\r\n                        <img src={item.image_url} className=\"rounded img-fluid card-image\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <p><strong>Location: </strong>{item.locations}</p>\r\n                        <p><strong>Built: </strong>{item.built}</p>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <p>{item.description}</p>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-danger\" onClick={toggle}>Close</button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default BuildingModalInfo","import React, { useState, useContext } from 'react'\r\nimport '../css/Image.css'\r\nimport { AppContext } from '../Context/ContextProvider'\r\nimport BuildingModalInfo from '../ModalInfos/BuildingModalInfo'\r\n\r\nconst BuildingItem = ({ item }) => {\r\n    const { showModal } = useContext(AppContext)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ marginBottom: 25 }} className=\"col-sm-6\">\r\n                <div className=\"card card-body bg-light\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <img src={item.image_url} className=\"rounded img-fluid card-image\" />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <h4>{item.type}</h4>\r\n                            <p><strong>Location: </strong>{item.locations}</p>\r\n                            <p><strong>Built: </strong>{item.built}</p>\r\n                            <button className=\"btn btn-primary float-right\" onClick={() => showModal(item)}>Learn more</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <BuildingModalInfo />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default BuildingItem","import React, { useContext } from 'react'\r\nimport { AppContext } from '../Context/ContextProvider'\r\nimport BuildingItem from '../FactCategory/BuildingItem'\r\n\r\nconst BuildingHome = () => {\r\n\r\n    const { buildingData, startQuizClicked } = useContext(AppContext)\r\n\r\n    startQuizClicked(false)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {buildingData.map(item => <BuildingItem key={item.id} item={item} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default BuildingHome","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport Home from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\nimport './custom.css'\r\nimport ContextProvider from './components/Context/ContextProvider';\r\nimport ResultPage from './components/Result/ResultPage';\r\nimport NavMenu from './components/NavMenu';\r\nimport NewNavMenu from './components/NewNavMenu';\r\nimport QuizPage from './components/Quiz/QuizPage';\r\nimport CityHome from './components/Home/CityHome'\r\nimport BuildingHome from './components/Home/BuildingHome'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n      return (\r\n          <div>\r\n            <ContextProvider>\r\n            <NewNavMenu />\r\n            <Route exact path='/' component={Home} />\r\n            <Route path='/city' component={CityHome} />\r\n            <Route path='/building' component={BuildingHome} />\r\n            <Route path='/quiz' component={QuizPage} />\r\n            <Route path='/result' component={ResultPage} />\r\n            <Route path='/fetch-data' component={FetchData} />\r\n            </ContextProvider>\r\n        </div>\r\n             \r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}